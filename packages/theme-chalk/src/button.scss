@use 'sass:map';
@use 'mixins/mixins.scss'as *;
@use 'mixins/button'as *;
@use 'mixins/var'as *;
@use 'common/var'as *;

@include b(button) {
    @include set-component-css-var('button', $button)
}

@include b(button) {
    display: inline-flex;
    justify-content: center;
    align-items: center;
    line-height: 1;
    // min-height will expand when in flex
    height: map.get($input-height, 'default');
    white-space: nowrap;
    cursor: pointer;
    color: getCssVar('button', 'text-color');
    text-align: center;
    box-sizing: border-box;
    outline: none;
    transition: 0.1s;
    font-weight: getCssVar('button', 'font-weight');
    user-select: none;
    vertical-align: middle;
    -webkit-appearance: none;
    background-color: getCssVar('button', 'bg-color');
    border: getCssVar('border');
    border-color: getCssVar('button', 'border-color');

    &:hover,
    &:focus {
        color: getCssVar('button', 'hover', 'text-color');
        border-color: getCssVar('button', 'hover', 'border-color');
        background-color: getCssVar('button', 'hover', 'bg-color');
        outline: none;
    }

    @include when(disabled) {

        &,
        &:hover,
        &:focus {
            color: getCssVar('button', 'disabled', 'text-color');
            cursor: not-allowed;
            background-image: none;
            background-color: getCssVar('button', 'disabled', 'bg-color');
            border-color: getCssVar('button', 'disabled', 'border-color');
        }
    }

    @each $type in (primary, success, warning, danger, info) {
        @include m($type) {
            @include button-variant($type);
        }
    }
}



@mixin button-variant($type) {
    $button-color-types: ('': ('text-color': ('color', 'white', ),
                'bg-color': ('color', $type, ),
                'border-color': ('color', $type, ),
                'outline-color': ('color', $type, 'light-5', ),
                'active-color': ('color', $type, 'dark-2', ),
            ),
            'hover': ('text-color': ('color', 'white', ),
                'link-text-color': ('color', $type, 'light-5', ),
                'bg-color': ('color', $type, 'light-3', ),
                'border-color': ('color', $type, 'light-3', ),
            ),
            'active': ('bg-color': ('color', $type, 'dark-2', ),
                'border-color': ('color', $type, 'dark-2')),
            'disabled': ('text-color': ('color', 'white', ),
            'bg-color': ('color', $type, 'light-5', ),
                'border-color': ('color',
                    $type,
                    'light-5',
                ),
            ),
        );

    @each $type,
    $typeMap in $button-color-types {

        @each $typeColor,
        $list in $typeMap {
            @include css-var-from-global(('button', $type, $typeColor), $list);
        }
    }

    // &.is-plain,
    // &.is-text,
    // &.is-link {
    //   @include button-plain($type);
    // }
}

@mixin button-plain($type) {
    $button-color-types: ('': ('text-color': ('color',
                    $type,
                ),
                'bg-color': ('color',
                    $type,
                    'light-9',
                ),
                'border-color': ('color',
                    $type,
                    'light-5',
                ),
            ),
            'hover': ('text-color': ('color',
                    'white',
                ),
                'bg-color': ('color',
                    $type,
                ),
                'border-color': ('color',
                    $type,
                ),
            ),
            'active': ('text-color': ('color',
                    'white',
                ),
            ),
        );

    @each $type,
    $typeMap in $button-color-types {

        @each $typeColor,
        $list in $typeMap {
            @include css-var-from-global(('button', $type, $typeColor), $list);
        }
    }

    &.is-disabled {

        &,
        &:hover,
        &:focus,
        &:active {
            color: getCssVar('color', $type, 'light-5');
            background-color: getCssVar('color', $type, 'light-9');
            border-color: getCssVar('color', $type, 'light-8');
        }
    }
}